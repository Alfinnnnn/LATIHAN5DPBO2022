/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package daftarmahasiswa;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Surya Alfin Maoludin
 */
public class Menu extends javax.swing.JFrame {

    private DefaultTableModel dtm;
    private Boolean isUpdate = false;
    private int selectedID = -1;
    private ArrayList<Mahasiswa> listMhs;

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        listMhs = new ArrayList<>();
        //Dummy
        listMhs.add(new Mahasiswa("1111", "Aaaa", "A", "Sangat Baik"));
        listMhs.add(new Mahasiswa("2222", "Bbbb", "B", "Baik"));
        listMhs.add(new Mahasiswa("3333", "Cccc", "C", "Cukup"));
        // Set Table
        Tabel.setModel(setTable());
        // Hide Delete button
        TombolDelete.setVisible(false);
    }

    public final DefaultTableModel setTable() {
        Object[] column = {"NIM", "Nama", "Nilai", "Keterangan"};
        DefaultTableModel dataTabel = new DefaultTableModel(null, column);
        for (int i = 0; i < listMhs.size(); i++) {
            Object[] row = new Object[4];
            row[0] = listMhs.get(i).getNim();
            row[1] = listMhs.get(i).getNama();
            row[2] = listMhs.get(i).getNilai();
            row[3] = listMhs.get(i).getKeterangan();

            dataTabel.addRow(row);
        }

        return dataTabel;
    }

    public void insertData() {
        // Get Data
        String nim = areaInputNim.getText();
        String nama = AreaInputNama.getText();
        String nilai = AreaInputNilai.getText();
        String keterangan = AreaInputKeterangan.getText();

        listMhs.add(new Mahasiswa(nim, nama, nilai, keterangan));
                
        if (areaInputNim.getText().equals("") || AreaInputNama.getText().equals("") || AreaInputNilai.getText().equals("") || AreaInputKeterangan.getText().equals("")){
            System.out.println("ERROR");
            JOptionPane.showMessageDialog(null, "Data Tidak Boleh Kosong!");
        }else {
            //Update Table
            Tabel.setModel(setTable());
            Tabel.getColumnModel().getColumn(0);
            Tabel.getColumnModel().getColumn(1);
            Tabel.getColumnModel().getColumn(2);
            Tabel.getColumnModel().getColumn(3);
            System.out.println("Insert Success!");
            JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan!");
        }
      

        
    }
   
    public void updateData() {
        // Get Data
        String nim = areaInputNim.getText();
        String nama = AreaInputNama.getText();
        String nilai = AreaInputNilai.getText();
        String keterangan = AreaInputKeterangan.getText();
        //System.out.println(nim + nama + nilai);

        listMhs.get(selectedID).setNim(nim);
        listMhs.get(selectedID).setNama(nama);
        listMhs.get(selectedID).setNilai(nilai);
        listMhs.get(selectedID).setKeterangan(keterangan);
        
        //mengupdate tabel
        Tabel.setModel(setTable());
        Tabel.getColumnModel().getColumn(0);
        Tabel.getColumnModel().getColumn(1);
        Tabel.getColumnModel().getColumn(2);
        Tabel.getColumnModel().getColumn(3);
           
        
        System.out.println("Update Success!");
        JOptionPane.showMessageDialog(null, "Data berhasil diubah!");
    }

    public void deleteData() {
        //hapus tabel yang dipilih
        listMhs.remove(selectedID);
        
        //mengupdate tabel
        Tabel.setModel(setTable());
        Tabel.getColumnModel().getColumn(0);
        Tabel.getColumnModel().getColumn(1);
        Tabel.getColumnModel().getColumn(2);
        Tabel.getColumnModel().getColumn(3);
        
        System.out.println("Delete Success!");
        JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Judul = new javax.swing.JLabel();
        TombolAdd = new javax.swing.JButton();
        areaInputNim = new javax.swing.JTextField();
        AddNIM = new javax.swing.JLabel();
        AddNama = new javax.swing.JLabel();
        AreaInputNama = new javax.swing.JTextField();
        AddNilai = new javax.swing.JLabel();
        AreaInputNilai = new javax.swing.JTextField();
        AddKeterangan = new javax.swing.JLabel();
        AreaInputKeterangan = new javax.swing.JTextField();
        Scrollbar = new javax.swing.JScrollPane();
        Tabel = new javax.swing.JTable();
        TombolDelete = new javax.swing.JButton();
        TombolCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Judul.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        Judul.setText("Daftar Mahasiswa");
        Judul.setToolTipText("");

        TombolAdd.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        TombolAdd.setText("Add");
        TombolAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TombolAddActionPerformed(evt);
            }
        });

        areaInputNim.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        areaInputNim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                areaInputNimActionPerformed(evt);
            }
        });

        AddNIM.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        AddNIM.setText("NIM");

        AddNama.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        AddNama.setText("Nama");

        AreaInputNama.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        AreaInputNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AreaInputNamaActionPerformed(evt);
            }
        });

        AddNilai.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        AddNilai.setText("Nilai");

        AreaInputNilai.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        AreaInputNilai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AreaInputNilaiActionPerformed(evt);
            }
        });

        AddKeterangan.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        AddKeterangan.setText("Keterangan");

        AreaInputKeterangan.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        AreaInputKeterangan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AreaInputKeteranganActionPerformed(evt);
            }
        });

        Tabel.setAutoCreateRowSorter(true);
        Tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Tabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Tabel.setUpdateSelectionOnSort(false);
        Tabel.setVerifyInputWhenFocusTarget(false);
        Tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelMouseClicked(evt);
            }
        });
        Scrollbar.setViewportView(Tabel);

        TombolDelete.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        TombolDelete.setText("Delete");
        TombolDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TombolDeleteActionPerformed(evt);
            }
        });

        TombolCancel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        TombolCancel.setText("Cancel");
        TombolCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TombolCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Scrollbar, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Judul)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(AddNama)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(AreaInputNama, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(AddNIM)
                                    .addGap(55, 55, 55)
                                    .addComponent(areaInputNim, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(AddNilai)
                                        .addComponent(AddKeterangan))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(AreaInputNilai, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                                        .addComponent(AreaInputKeterangan)))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TombolAdd)
                            .addComponent(TombolDelete)
                            .addComponent(TombolCancel))))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(Judul)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(areaInputNim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddNIM)
                    .addComponent(TombolAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AreaInputNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddNama)
                    .addComponent(TombolCancel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AreaInputNilai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddNilai)
                    .addComponent(TombolDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(AddKeterangan)
                    .addComponent(AreaInputKeterangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(Scrollbar, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void areaInputNimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_areaInputNimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_areaInputNimActionPerformed

    private void AreaInputNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AreaInputNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AreaInputNamaActionPerformed

    private void AreaInputNilaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AreaInputNilaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AreaInputNilaiActionPerformed

    private void TombolAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TombolAddActionPerformed
        // TODO add your handling code here:
        if (isUpdate == false)
            insertData();
        else {
            updateData();
            TombolAdd.setText("Add");
            TombolDelete.setVisible(false);
            this.isUpdate = false;
        }
        
            
        //menghapus area input setelah menambahkan data baru
        areaInputNim.setText("");
        AreaInputNama.setText("");
        AreaInputNilai.setText("");
        AreaInputKeterangan.setText("");
    }//GEN-LAST:event_TombolAddActionPerformed

    private void TabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelMouseClicked
        // TODO add your handling code here:
        this.isUpdate = true;

        //Get Selected Data
        int row = Tabel.getSelectedRow();
        String selectedNim = (Tabel.getModel().getValueAt(row, 0).toString());
        String selectedNama = (Tabel.getModel().getValueAt(row, 1).toString());
        String selectedNilai = (Tabel.getModel().getValueAt(row, 2).toString());
        String selectedKeterangan = (Tabel.getModel().getValueAt(row, 3).toString());

        for (int i = 0; i < listMhs.size(); i++) {
            if (selectedNim.equals(listMhs.get(i).getNim())) {
                selectedID = i;
                break;
            }
        }
         
        //System.out.println(selectedID);
        areaInputNim.setText(selectedNim);
        AreaInputNama.setText(selectedNama);
        AreaInputNilai.setText(selectedNilai);
        AreaInputKeterangan.setText(selectedKeterangan);

        TombolAdd.setText("Update");
        TombolDelete.setVisible(true);
    }//GEN-LAST:event_TabelMouseClicked

    private void TombolDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TombolDeleteActionPerformed
        // TODO add your handling code here:
        if (isUpdate == true) {
            deleteData();
            TombolAdd.setText("Add");
            TombolDelete.setVisible(false);
            this.isUpdate = false;
            
        //menghapus area input setelah menambahkan data baru
        areaInputNim.setText("");
        AreaInputNama.setText("");
        AreaInputNilai.setText("");
        AreaInputKeterangan.setText("");
        }
    }//GEN-LAST:event_TombolDeleteActionPerformed

    private void TombolCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TombolCancelActionPerformed
        // TODO add your handling code here:
        TombolAdd.setText("Add");
        TombolDelete.setVisible(false);
        this.isUpdate = false;
        
        //mengupdate tabel
        Tabel.setModel(setTable());
        Tabel.getColumnModel().getColumn(0);
        Tabel.getColumnModel().getColumn(1);
        Tabel.getColumnModel().getColumn(2);
        Tabel.getColumnModel().getColumn(3);
        
        //menghapus area input setelah menambahkan data baru
        areaInputNim.setText("");
        AreaInputNama.setText("");
        AreaInputNilai.setText("");
        AreaInputKeterangan.setText("");
    }//GEN-LAST:event_TombolCancelActionPerformed

    private void AreaInputKeteranganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AreaInputKeteranganActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AreaInputKeteranganActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddKeterangan;
    private javax.swing.JLabel AddNIM;
    private javax.swing.JLabel AddNama;
    private javax.swing.JLabel AddNilai;
    private javax.swing.JTextField AreaInputKeterangan;
    private javax.swing.JTextField AreaInputNama;
    private javax.swing.JTextField AreaInputNilai;
    private javax.swing.JLabel Judul;
    private javax.swing.JScrollPane Scrollbar;
    private javax.swing.JTable Tabel;
    private javax.swing.JButton TombolAdd;
    private javax.swing.JButton TombolCancel;
    private javax.swing.JButton TombolDelete;
    private javax.swing.JTextField areaInputNim;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
